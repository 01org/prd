config ND_ARCH_HAS_IOREMAP_CACHE
	depends on (X86 || IA64 || ARM || ARM64 || SH || XTENSA)
	def_bool y

menuconfig NFIT_DEVICES
	bool "NVDIMM (NFIT) Support"
	depends on ND_ARCH_HAS_IOREMAP_CACHE
	depends on PHYS_ADDR_T_64BIT
	help
	  Support for non-volatile memory devices defined by the NVDIMM
	  Firmware Interface Table. (NFIT)  On platforms that define an
	  NFIT, via ACPI, or other means, a "nd_bus" is registered to
	  advertise PM (persistent memory) namespaces (/dev/pmemX) and
	  BLOCK (sliding block data window) namespaces (/dev/ndX). A PM
	  namespace refers to a system-physical-address-range than may
	  span multiple DIMMs and support DAX (see CONFIG_DAX).  A BLOCK
	  namespace refers to a NVDIMM control region which exposes a
	  register-based windowed access mode to non-volatile memory.
	  See the NVDIMM Firmware Interface Table specification for more
	  details.

if NFIT_DEVICES

config ND_CORE
	tristate "Core: Generic 'nd' Device Model"
	help
	  Platform agnostic device model for an NFIT-defined bus.
	  Publishes resources for a NFIT-persistent-memory driver and/or
	  NFIT-block-data-window driver to attach.  Exposes a device
	  topology under a "ndX" bus device and a "/dev/ndctl<N>"
	  dimm-ioctl message passing interface per registered NFIT
	  instance.  A userspace library "ndctl" provides an API to
	  enumerate/manage this subsystem.

config NFIT_ACPI
	tristate "NFIT ACPI: Discover ACPI-Namespace NFIT Devices"
	select ND_CORE
	depends on ACPI
	help
	  Infrastructure to probe the ACPI namespace for NVDIMMs and
	  register the platform-global NFIT blob with the core.  Also
	  enables the core to craft ACPI._DSM messages for platform/dimm
	  configuration.

config NFIT_ACPI_DEBUG
	bool "NFIT ACPI: Turn on extra debugging"
	depends on NFIT_ACPI
	depends on DYNAMIC_DEBUG
	default n
	help
	  Enabling this option causes the nd_acpi driver to dump the
	  input and output buffers of _DSM operations on the ACPI0012
	  device, which can be very verbose.  Leave it disabled unless
	  you are debugging a hardware / firmware issue.

config NFIT_TEST
	tristate "NFIT TEST: Manufactured NFIT for interface testing"
	depends on DMA_CMA
	depends on ND_CORE=m
	depends on m
	help
	  For development purposes register a manufactured
	  NFIT table to verify the resulting device model topology.
	  Note, this module arranges for ioremap_cache() to be
	  overridden locally to allow simulation of system-memory as an
	  io-memory-resource.

	  Note, this test expects to be able to find at least
	  256MB of CMA space (CONFIG_CMA_SIZE_MBYTES) or it will fail to
	  load.  Kconfig does not allow for numerical value
	  dependencies, so we can only warn at runtime.

	  Say N unless you are doing development of the 'nd' subsystem.

config BLK_DEV_PMEM
	tristate "PMEM: Persistent memory block device support"
	depends on ND_CORE || X86_PMEM_LEGACY
	default ND_CORE
	help
	  Memory ranges for PMEM are described by either an NFIT
	  (NVDIMM Firmware Interface Table, see CONFIG_NFIT_ACPI), a
	  non-standard OEM-specific E820 memory type (type-12, see
	  CONFIG_X86_PMEM_LEGACY), or it is manually specified by the
	  'memmap=nn[KMG]!ss[KMG]' kernel command line (see
	  Documentation/kernel-parameters.txt).  This driver converts
	  these persistent memory ranges into block devices that are
	  capable of DAX (direct-access) file system mappings.  See
	  Documentation/blockdev/nd.txt for more details.

	  Say Y if you want to use a NVDIMM described by NFIT

config ND_BTT_DEVS
	bool

config ND_BTT
	tristate "BTT: Block Translation Table (atomic sector updates)"
	depends on ND_CORE
	default ND_CORE
	select ND_BTT_DEVS

config ND_MAX_REGIONS
	int "Maximum number of regions supported by the sub-system"
	default 64
	---help---
	  A 'region' corresponds to an individual DIMM or an interleave
	  set of DIMMs.  A typical maximally configured system may have
	  up to 32 DIMMs.

	  Leave the default of 64 if you are unsure.

endif
